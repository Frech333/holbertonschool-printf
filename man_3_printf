.TH PRINTF 3 "September 2023" "Holberton School"
.SH NAME
printf \- formatted output conversion
.SH SYNOPSIS
.B #include <stdio.h>
.PP
.B int printf(const char *format, ...);
.SH DESCRIPTION
The \fBprintf\fP function writes the output to stdout according to the format string \fIformat\fP. The format string may contain plain characters and format specifiers. Format specifiers are denoted by the '%' character, followed by a conversion character.
.SH RETURN VALUE
Upon successful completion, the \fBprintf\fP function returns the number of characters printed (excluding the null byte used to end output to strings).
.SH FORMAT SPECIFIERS
The format specifiers are replaced by the values specified as additional arguments after the \fIformat\fP string.
.IP "%c"
Print a single character. The corresponding argument must be an int.
.IP "%s"
Print a null-terminated string. The corresponding argument must be a pointer to a character array (const char *).
.IP "%d", "%i"
Print a signed decimal integer. The corresponding argument must be an int.
.IP "%u"
Print an unsigned decimal integer. The corresponding argument must be an unsigned int.
.IP "%o"
Print an unsigned octal integer. The corresponding argument must be an unsigned int.
.IP "%x", "%X"
Print an unsigned hexadecimal integer (lowercase or uppercase, respectively). The corresponding argument must be an unsigned int.
.IP "%p"
Print a pointer value. The corresponding argument must be a pointer.
.SH EXAMPLES
The following code demonstrates the use of \fBprintf\fP:
.PP
.nf
#include <stdio.h>

int main() {
    int number = 42;
    char str[] = "Hello, world!";
    printf("Number: %d\n", number);
    printf("String: %s\n", str);
    return 0;
}
.fi
.SH SEE ALSO
.BR printf (1),
.BR stdio (3)
.SH NOTES
The \fBprintf\fP function is part of the C Standard Library and is defined in \fIstdio.h\fP header file.
.SH AUTHOR
The \fBprintf\fP function man page was written by [Jose Frech] for the Holberton School project.
